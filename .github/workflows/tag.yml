name: ios-mcn-ran-build

on:
  push:
    tags:
      # Listen for valid tags (e.g., v0.0.1.rc1-dist, v0.0.1.rc1-uni)
      - 'v*.*.*.rc*-dist'
      - 'v*.*.*.rc*-uni'

env:
  REGISTRY: ghcr.io
  DOCKER_REPOSITORY: ${{ github.repository_owner }}

jobs:

  authcheck:
    name: authcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCR_PAT }}

  set-version-info:
    needs: authcheck
    name: Set Version Info
    runs-on: ubuntu-latest
    outputs:
      DOCKER_IMAGE_TAG: ${{ steps.setvars.outputs.DOCKER_IMAGE_TAG }}
      RAN_TYPE_SUFFIX: ${{ steps.setvars.outputs.RAN_TYPE_SUFFIX }}
    steps:
      - name: Extract Version Info
        id: setvars
        run: |
          FULL_TAG_NAME="${GITHUB_REF_NAME}"
          echo "Processing tag: $FULL_TAG_NAME"

          # Validate correct tag format
          if [[ ! "$FULL_TAG_NAME" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(\.rc[0-9]+)?-(dist|uni)$ ]]; then
            echo "::error::Tag format incorrect: '$FULL_TAG_NAME'. Expected format: vX.X.X.rcX-dist or vX.X.X.rcX-uni"
            exit 1
          fi

          # Extract base tag by removing -dist or -uni suffix
          DOCKER_IMAGE_TAG="${FULL_TAG_NAME%-dist}"
          DOCKER_IMAGE_TAG="${DOCKER_IMAGE_TAG%-uni}"
          echo "Extracted DOCKER_IMAGE_TAG: $DOCKER_IMAGE_TAG"

          # Determine suffix for RAN type
          if [[ "$FULL_TAG_NAME" == *-dist ]]; then
            RAN_TYPE_SUFFIX="-dist"
          elif [[ "$FULL_TAG_NAME" == *-uni ]]; then
            RAN_TYPE_SUFFIX="-uni"
          fi

          echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "RAN_TYPE_SUFFIX=$RAN_TYPE_SUFFIX" >> $GITHUB_OUTPUT

  build-and-push:
    needs: set-version-info
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: [m4-base, m4-build, m4-gnb, m4-cuup, m4-nr-ue]
    steps:
      - uses: actions/checkout@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.GHCRUSER }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & Push Docker Image
        run: |
          IMAGE="${{ env.REGISTRY }}/${{ env.DOCKER_REPOSITORY }}/${{ matrix.component }}${{ needs.set-version-info.outputs.RAN_TYPE_SUFFIX }}:${{ needs.set-version-info.outputs.DOCKER_IMAGE_TAG }}"
          echo "Building and pushing: $IMAGE"
          docker build -t "$IMAGE" -f docker/Dockerfile.base.ubuntu23.m4cn .
          docker push "$IMAGE"
